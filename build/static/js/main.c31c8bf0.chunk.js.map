{"version":3,"sources":["img/check.png","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","src","checklist","alt","width","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c31c8bf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/check.c815c1e8.png\";","import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n    return (\n        <div>\n            <button\n            onClick = {onClick}\n            style={{backgroundColor: color}} \n            className='btn'> \n            {text}</button>\n        </div>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport checklist from '../img/check.png'\nimport Button from './Button'\n\nconst Header = ({title, onAdd, showAdd}) => {\n    \n    return (\n        <header className='header'>\n            <img src={checklist} alt=\"ToDoImage\" width='40'/>\n            <h1> {title} </h1>\n            <Button color={showAdd ? '#22BCF1' : '#126784'} text={ showAdd ? 'Close' : 'Add'}onClick = {onAdd}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Task Tracker\",\n}\n\nHeader.propTypes = {\n    title: PropTypes.string\n}\n\nexport default Header\n\n\n","import  { FaTimes } from 'react-icons/fa' \n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div \n        className={`task ${task.reminder ? 'reminder' : ''}`}\n        onDoubleClick={() => onToggle(task.id)}>\n\n            <h3>\n                {task.text}{' '}\n            <FaTimes \n            style={{color: 'red', cursor: 'pointer'}}\n            onClick={() => onDelete(task.id)}/>\n            </h3>\n            <p>{task.day}</p>\n            \n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n        {tasks.map((task) => \n        (<Task key={task.id} \n            task={task} \n            onDelete={onDelete} \n            onToggle={onToggle}/>\n            \n        ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n    \n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!text) {\n            alert('Please add a task')\n            return\n        } \n\n        onAdd({ text, day, reminder})\n        \n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label> Task </label>\n                <input type='text' \n                placeholder='Add task' \n                value={text} \n                onChange={(e) => setText(e.target.value)}\n                />\n            </div>\n            <div className='form-control'>\n                <label> Day and Time </label>\n                <input type='text' \n                placeholder='Add day and time'\n                value={day} \n                onChange={(e) => setDay(e.target.value)}\n                />\n            </div>\n            <div className='form-control form-control-check'>\n                <label> Reminder </label>\n                <input type='checkbox'\n                value={reminder} \n                checked={reminder}\n                onChange={(e) => setReminder(e.currentTarget.checked)}\n                />\n            </div>\n            <input type=\"submit\" value='Save Task' className='btn btn-block'/>\n\n        </form>\n    )\n}\n\nexport default AddTask\n\n","// Use a hook\nimport { useState } from 'react'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\n// All events are stored in here... global!\n\nfunction App() {\n    // state is immutable, \n    // you have to recreate and send again, so no push()!\n    const [showAddTask, setShowAddTask] = useState(false);\n    const [tasks, setTasks] = useState([\n      {\n          id: 1,\n          text: 'Watching a movie with Chan',\n          day: 'Jan 21th 2022 at 8pm',\n          reminder: 'false'\n      },\n      {\n          id: 2,\n          text: 'Sending package to Germany',\n          day: 'Aug 18th 2022 at 10am',\n          reminder: 'true'\n      },\n      {\n          id: 3,\n          text: 'Having lunch with Nathalie',\n          day: 'Aug 17th 2021 at 1pm',\n          reminder: 'false'\n      },\n   ]) \n\n   // Add task\n   const addTask = (task) => {\n     const id = Math.floor(Math.random() * 10000) +1\n     const newTask = {id, ...task}\n     setTasks([...tasks, newTask])\n\n   }\n\n   // delete task\n   const deleteTask = (id) => {\n     setTasks(tasks.filter((task) => task.id !== id))\n   }\n\n   // toggle reminder\n   const toggleReminder = (id) => {\n     setTasks(tasks.map((task) => task.id === id ? {...task, reminder : task.reminder} : task))\n   }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => \n      setShowAddTask (!showAddTask)}\n      showAdd={showAddTask}\n      />\n\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (\n      <Tasks tasks={tasks} \n      onDelete={deleteTask}\n      onToggle={toggleReminder}/> \n      ) : (\n        'There are no tasks for now!'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
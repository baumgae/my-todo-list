{"ast":null,"code":"var _jsxFileName = \"/Users/lea/Document/02_Projects/react-task-tracker/src/components/Header.js\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  title\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: headerStyle,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Header;\nHeader.defaultProps = {\n  title: \"Task Tracker\"\n}; // Make your own propType,\n// with this, we can say, expect only strings\n\nHeader.propTypes = {\n  title: PropTypes.string\n};\nconst headerStyle = {\n  color: 'red',\n  backgroundColor: 'black'\n};\nexport default Header;\n/*\nDestructor from this \nconst Header = (props) => {\n    to\nconst Header = ({title}) => {\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/lea/Document/02_Projects/react-task-tracker/src/components/Header.js"],"names":["PropTypes","Header","title","headerStyle","defaultProps","propTypes","string","color","backgroundColor"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACxB,sBACI;AAAA,2BACI;AAAI,MAAA,KAAK,EAAEC,WAAX;AAAA,gBAAyBD;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;KAAMD,M;AAQNA,MAAM,CAACG,YAAP,GAAsB;AAClBF,EAAAA,KAAK,EAAE;AADW,CAAtB,C,CAIA;AACA;;AAEAD,MAAM,CAACI,SAAP,GAAmB;AACfH,EAAAA,KAAK,EAAEF,SAAS,CAACM;AADF,CAAnB;AAIA,MAAMH,WAAW,GAAG;AAChBI,EAAAA,KAAK,EAAE,KADS;AAEhBC,EAAAA,eAAe,EAAE;AAFD,CAApB;AAKA,eAAeP,MAAf;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst Header = ({title}) => {\n    return (\n        <header>\n            <h1 style={headerStyle}>{title}</h1>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Task Tracker\",\n}\n\n// Make your own propType,\n// with this, we can say, expect only strings\n\nHeader.propTypes = {\n    title: PropTypes.string,\n}\n\nconst headerStyle = {\n    color: 'red', \n    backgroundColor: 'black'\n}\n\nexport default Header\n\n/*\nDestructor from this \nconst Header = (props) => {\n    to\nconst Header = ({title}) => {\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}